{"version":3,"sources":["components/Carousel.tsx","components/ControlPanel.tsx","App.tsx","index.tsx"],"names":["Carousel","imageUrls","itemWidth","frameSize","step","animationDuration","useState","imagePosition","setImagePosition","nextBtnLimit","length","itemSize","width","height","carouselStyles","maxWidth","imgListStyles","transform","transition","className","style","map","imageUrl","index","src","alt","type","onClick","current","disabled","Math","abs","ControlPanel","onChangeOptions","imagesCount","defaultFrameSize","defaultItemWidth","defaultStep","defaultAnimationDuration","Option","title","name","id","defaultValue","min","max","options","option","htmlFor","onChange","event","target","value","App","state","images","changeOptions","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6f9c176.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  imageUrls: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n};\n\nconst Carousel: React.FC<Props> = (\n  {\n    imageUrls,\n    itemWidth,\n    frameSize,\n    step,\n    animationDuration,\n  },\n) => {\n  const [imagePosition, setImagePosition] = useState(0);\n\n  const nextBtnLimit\n    = ((itemWidth * imageUrls.length) - (frameSize * itemWidth)) * -1;\n\n  const prevBtnLimit = 0;\n\n  const nextImg = () => {\n    setImagePosition(current => current - (step * itemWidth));\n  };\n\n  const prevImg = () => {\n    setImagePosition(current => current + (step * itemWidth));\n  };\n\n  const itemSize = {\n    width: `${itemWidth}px`,\n    height: `${itemWidth}px`,\n  };\n\n  const carouselStyles = {\n    maxWidth: `${itemWidth * frameSize}px`,\n  };\n\n  const imgListStyles = {\n    transform: `translateX(${imagePosition}px)`,\n    transition: `transform ${animationDuration}ms`,\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\" style={carouselStyles}>\n        <ul\n          className=\"Carousel__list\"\n          style={imgListStyles}\n        >\n          {imageUrls.map((imageUrl: string, index: number) => (\n            <li key={imageUrl}>\n              <img src={imageUrl} alt={`${index + 1}`} style={itemSize} />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          type=\"button\"\n          onClick={prevImg}\n          disabled={Math.abs(imagePosition) <= prevBtnLimit}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={nextImg}\n          disabled={imagePosition <= nextBtnLimit}\n        >\n          Next\n        </button>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './ControlPanel.scss';\nimport { OptionInterface } from '../types/Option';\n\ntype Props = {\n  onChangeOptions: (option: string, value: number) => void;\n  imagesCount: number;\n  defaultFrameSize: number;\n  defaultItemWidth: number;\n  defaultStep: number;\n  defaultAnimationDuration: number,\n};\n\nexport const ControlPanel: React.FC<Props> = (\n  {\n    onChangeOptions,\n    imagesCount,\n    defaultFrameSize,\n    defaultItemWidth,\n    defaultStep,\n    defaultAnimationDuration,\n  },\n) => {\n  class Option implements OptionInterface {\n    constructor(\n      public title: string,\n      public name: string,\n      public id: string,\n      public defaultValue: number,\n      public min: string,\n      public max: string,\n      public step: string,\n    ) {}\n  }\n\n  const optionWidth = new Option(\n    'Item width',\n    'itemWidth',\n    'width',\n    defaultItemWidth,\n    '50',\n    '350',\n    '10',\n  );\n\n  const optionFrameSize = new Option(\n    'Frame size',\n    'frameSize',\n    'frameSize',\n    defaultFrameSize,\n    '1',\n    `${imagesCount}`,\n    '1',\n  );\n\n  const optionStep = new Option(\n    'Step',\n    'step',\n    'step',\n    defaultStep,\n    '1',\n    '5',\n    '1',\n  );\n\n  const optionAnimationDuration = new Option(\n    'Animation Duration',\n    'animationDuration',\n    'animationDuration',\n    defaultAnimationDuration,\n    '0',\n    '5000',\n    '500',\n  );\n\n  const options = [\n    optionWidth,\n    optionFrameSize,\n    optionStep,\n    optionAnimationDuration,\n  ];\n\n  return (\n    <div className=\"control-panel\">\n      {options.map(option => (\n        <label htmlFor={option.id} key={option.id}>\n          {option.title}\n          <input\n            type=\"range\"\n            id={option.id}\n            name={option.name}\n            defaultValue={option.defaultValue}\n            min={option.min}\n            max={option.max}\n            step={option.step}\n            onChange={event => (\n              onChangeOptions(event.target.name, +event.target.value)\n            )}\n          />\n        </label>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport { ControlPanel } from './components/ControlPanel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 2,\n    step: 2,\n    animationDuration: 1000,\n  };\n\n  changeOptions = (option: string, value: number) => {\n    this.setState(state => (\n      {\n        ...state,\n        [option]: value,\n      }\n    ));\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          imageUrls={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n        <hr />\n        <ControlPanel\n          imagesCount={images.length}\n          defaultFrameSize={frameSize}\n          defaultItemWidth={itemWidth}\n          defaultStep={step}\n          onChangeOptions={this.changeOptions}\n          defaultAnimationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}